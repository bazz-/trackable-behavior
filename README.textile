The Trackable Behavior Plugin allows you to easily keep track of who created a record and the person that last modified it

h2. Background

I was reading Matt Curry's "Super Awesome Advanced CakePHP Tips":http://www.pseudocoder.com/free-cakephp-book/ and saw he had a behavior that tracked creation and deletion by user per record. I had been using WhoDidIt Behavior by "Daniel Vechiatto":http://bakery.cakephp.org/articles/view/whodidit-behavior-automagic-created_by-and-modified_by-fields, and while I liked Matt's behavior, I thought binding the models automatically in the behavior was much slicker. So here I've melded the two behaviors into one.

h2. Installation

* Clone from github : in your plugin directory type @git clone git://github.com/josegonzalez/trackable-behavior.git trackable@
* Add as a git submodule : in your plugin directory type @git submodule add git://github.com/josegonzalez/trackable-behavior.git trackable@
* Download an archive from github and extract it in @/plugins/trackable@

h2. Usage

# Implement Matt Curry's method of "Getting the Logged In User from Anywhere":http://www.pseudocoder.com/free-cakephp-book/
# In the model that needs to be tracked, add :
	@var $actsAs = array('Trackable.Trackable')@
# If you have not implemented the @User::get()@ method but still want to use this behavior, follow this example (will always override the @User::get()@ method):
<pre><code><?php
class Post extends Model {
	var $name = 'Post';
	var $actsAs = array('Trackable');
	function myCustomSave($data, $user_id) {
		$this->trackable_id = $user_id;
		return $this->save($data);
	}
}
?>
</code></pre>

At this point, everything should theoretically work.

h2. TODO:

# <del>Better code commenting</del>
# <del>Keeping track of who modified something and when</del> Outside scope, use a versioning behavior to do this